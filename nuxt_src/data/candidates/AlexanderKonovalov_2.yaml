id: 'AlexanderKonovalov_2'
ja:
  candidate:
    name: Alexander Konovalov
    twitter: alexknvl
    github: alexknvl
    icon: https://pbs.twimg.com/profile_images/797920728859480065/sCOPNuwF_400x400.jpg
    organization: Compellon, Analytics Engineer
    contributes:
      - Scalaz コントリビューターであり、チームメンバーです
    speaker_experience:
      - "WWW2017 で論文を発表しました <a href='https://www.slideshare.net/AlexanderKonovalov13/learning-event-extractors-from-knowledge-base-revisions'>https://www.slideshare.net/AlexanderKonovalov13/learning-event-extractors-from-knowledge-base-revisions</a>"
      - "Lambdaconf 2018 でも scalaz summit の一環としてインフォーマルな発表を行いました <a href='https://alexknvl.com/docs/scalaz_summit_presentation.pdf'>https://alexknvl.com/docs/scalaz_summit_presentation.pdf</a>"
  program:
    title: "型の住人を数える"
    length: 90
    audience: Intermediate
    language: English
    tags:
      - Functional Programming
    suggestions:
      - 型理論、Yoneda / Coyoneda の補題、表現可能な関手、Theorems for free などをしっかりと理解したい人
    detail: |
      いっぱしの関数型プログラマなら ∀ a. a → a は 1つの住人しか持たないことを知っていますが、それはどうしてでしょうか?
      本セッションでは、型代数、パラメトリック性、Yoneda / Coyoneda の補題、表現可能な関手、コンテナ関手を駆使して System F の項を厳密に数える方法を解説します。
      これにより、Theorems for Free 同様の新しい強力な推論ツールを手に入れることができます。
en:
  candidate:
    name: Alexander Konovalov
    twitter: alexknvl
    github: alexknvl
    icon: https://pbs.twimg.com/profile_images/797920728859480065/sCOPNuwF_400x400.jpg
    organization: Compellon, Analytics Engineer
    contributes:
      - I am a contributor and a team member of Scalaz.
    speaker_experience:
      - I have presented an academic paper at WWW2017, <a href='https://www.slideshare.net/AlexanderKonovalov13/learning-event-extractors-from-knowledge-base-revisions'>https://www.slideshare.net/AlexanderKonovalov13/learning-event-extractors-from-knowledge-base-revisions</a> and presented <a href='https://alexknvl.com/docs/scalaz_summit_presentation.pdf'>https://alexknvl.com/docs/scalaz_summit_presentation.pdf</a> at Lambdaconf 2018 but in an informal setting during scalaz summit and without much preparation.
  program:
    title: "Counting type inhabitants"
    length: 90
    audience: Intermediate
    language: English
    tags:
      - Functional Programming
    suggestions:
      - People who want to get a deeper understanding of type theory, Yoneda / Coyoneda lemmas, representable functors, theorems for free.
    detail: |
      FP developers know that ∀ a. a → a has only one inhabitant, but how?
      In this talk you will learn how to rigorously count System F terms using type algebra, parametricity, Yoneda & Coyoneda lemmas, representable & container functors.
      We will discover that this gives us a new and powerful reasoning tool akin to Theorems for Free.
