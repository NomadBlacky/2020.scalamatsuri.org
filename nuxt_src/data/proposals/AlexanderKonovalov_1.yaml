id: 'AlexanderKonovalov_1'
speakers:
  - 'AlexanderKonovalov'
ja:
  title: "再帰:スキーム,代数,finally tagless,データ型. 統合されたビジョン"
  length: 90
  audience: Intermediate
  language: English
  tags:
    - Functional Programming
  keywords:
    - 関数型プログラミング
    - ベストプラクティス
    - ソフトウェアデザインとアーキテクチャ
  suggestions:
    - Recursion Schemes(再帰スキーム)やfinally taglessエンコーディング、より汎用的な型理論について理解を深めたい人
    - Scalaにおける関数型プログラミングについて中ぐらいの理解ができており、より高度なトピックについて学びたい人
  detail: |
    このトークでは、再帰スキームやfinally taglessエンコーディングの裏にある中心的概念をゼロから導出します。

    型代数(type algebra)や同型写像(isomorphism)の簡単な紹介から始まり、そして単純な再帰的なデータ型とそれに対する様々な畳み込み(fold, foldMap, 直接的なfoldr)のような操作を通じて、final taglessや再帰スキームなどの同型写像を利用して異なる形態へと揉み込んでいく方法を学びます。

    そうすれば自然なこととして "Recursive"型クラス、代数的データ型(ADT)のBoehm-Berarducciエンコーディング、catamorphism、そしてF代数(F-algebras)へと到達することでしょう。
en:
  title: "Recursion: schemes, algebras, finally tagless, data types. A unifying vision."
  length: 90
  audience: Intermediate
  language: English
  tags:
    - Functional Programming
  keywords:
    - Functional Programming
    - Best Practices
    - Software Design and Architecture
  suggestions:
    - People who want a deeper understanding of recursion schemes, finally tagless encoding, and type theory in general.
    - People who have achieved intermediate understanding of functional programming in Scala, and want to learn more advanced topics.
  detail: |
    In this talk I will derive the core ideas behind recursion schemes and finally tagless encoding starting from scratch.

    We will start with a short introduction to type algebra and isomorphisms.
    Then we will take simple recursive data types and explore various `fold`-like operations on them and how we can massage them into different forms using isomorphisms: final tagless, recursion schemes, `foldMap`-like operations, and direct `foldr`-style. We will naturally arrive at the `Recursive` typeclass, Boehm-Berarducci encoding of ADTs, catamorphisms and F-algebras.
