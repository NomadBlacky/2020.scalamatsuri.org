id: 'TomoyukiShimomuraYoshimasaTanabe_1'
speakers: 
  - 'TomoyukiShimomura'
  - 'YoshimasaTanabe'
ja: 
  title: "悩める開発者に贈る ~サービスの継続的な成長を支える分析設計手法"
  length: 90
  audience: Intermediate
  language: Japanese
  tags:
    - Best Practices
    - Software Design and Architecture
  keywords:
    - 関数型プログラミング
    - ベストプラクティス
    - ソフトウェアデザインとアーキテクチャ
  suggestions:
    - チーム開発に取り組んでるいて、開発手法に課題を感じる
    - チームとしての品質を担保したい人
    - 要件定義、設計が好きな人
  slide_url: https://gitpitch.com/s10myk4/scalamaturi2019-slide#/
  youtube:
  detail: |
    あなたはチーム開発の中で、要件の曖昧さを感じたり、モデリングがしっくりこないといった感じることはないだろうか？
    個人のセンスやスキルによってモデリングや設計がなされているような現場をよく耳にする。このような状態が続くと、新機能の追加コストが高くなるなど、負債となりえる様々な悪影響をもたらすことは想像に難くないだろう。

    ここでは直感に頼らずに形式的なアプローチで要求の把握からモデリング、詳細設計までを導く方法を紹介する。また、各フェーズのアウトプットを Scala で書いており、この手法において Scala がどのような有用性を持つかについても言及したい。 
    それによって我々はビジネスの要求を捉え、チームとして継続的に一貫した品質のソフトウェアを提供したいのである。
en:
  title: "Software analysis and design for continuously growing services"
  length: 90
  audience: Intermediate
  language: Japanese
  tags:
    - Best Practices
    - Software Design and Architecture 
  keywords:
    - Functional Programming
    - Best Practices
    - Software Design and Architecture
  suggestions:
    - Those who are working in a team and feel their development methodology needs improvement
    - Those who want to guarantee quality as a team
    - Those who are interested in requirements specifications and design
  slide_url: https://gitpitch.com/s10myk4/scalamaturi2019-slide#/
  youtube:
  detail: |
    When you are developing in a team, have you ever found the requirements to be vague, or felt that something was not right about the domain model? We often hear about projects where the modeling and design are done based on some individual's sense or skills. It's not hard to imagine where that road could lead - a spiral of harmful effects such as increasing costs to add new features and technical debts.

    In this session, we would like to introduce a formal approach to requirements capturing, domain modeling, and detail designs without relying on intuition. We've written the output from each phase using Scala, and would like to discuss the overall benefits of using Scala in this approach. Our overarching goal is to capture the business requirements and continuously provide quality software in a consistent manner as a team
